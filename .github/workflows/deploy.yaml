name: Deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.gitignore'
      - '.github/workflows/build-pr.yaml'
      - '.github/workflows/manual-deploy-dev.yaml'
      - '.github/workflows/security.yaml'
      - '.github/dependabot.yaml'

env:
  TZ: Europe/Oslo

jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"
    name: Build/test & push image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('server/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies for client
        run: pnpm install

      - name: Install dependencies for server
        run: cd server && pnpm install

      - name: Build app
        run: pnpm run build

      - name: Build docker image
        uses: docker/setup-buildx-action@v3

      - name: Push docker image to Google Artifact Registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: okonomi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/naiserator-dev.yaml
          PRINT_PAYLOAD: true

  #  deploy-prod:
  #    name: Deploy to prod
  #    needs: deploy-dev
  #    if: github.ref == 'refs/heads/master'
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: nais/deploy/actions/deploy@v1
  #        env:
  #          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #          CLUSTER: prod-gcp
  #          IMAGE: ${{ needs.build.outputs.image }}
  #          RESOURCE: .nais/naiserator-prod.yaml
  #          PRINT_PAYLOAD: true
