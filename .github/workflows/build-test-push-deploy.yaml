name: Bygg, test og deploy til dev/prod

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.gitignore'
      - '.github/workflows/build-pr.yaml'
      - '.github/workflows/security.yaml'
      - '.github/workflows/alerts-dev.yaml'
      - '.nais/alerts-dev.yaml'

jobs:
  bygg-test-push-image:
    permissions:
      contents: "read"
      id-token: "write"
    name: Bygg/test og push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Sjekker ut repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache klient node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache server node_modules
        id: cache-server-node-modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('server/package-lock.json') }}

      - name: Installerer dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Installerer dependencies for server
        if: steps.cache-server-node-modules.outputs.cache-hit != 'true'
        run: cd server && npm ci

      - name: Bygger applikasjonen
        run: npm run build

      - name: Bygg docker image
        uses: docker/setup-buildx-action@v2

      - name: Push docker image til Google Artifact Registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: okonomi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev-gcp:
    name: Deploy til dev-gcp
    needs: bygg-test-push-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          IMAGE: ${{ needs.bygg-test-push-image.outputs.image }}
          RESOURCE: .nais/naiserator-dev.yaml

  #  deploy-prod-gcp:
  #    name: Deploy til prod-gcp
  #    needs: deploy-dev-gcp
  #    if: github.ref == 'refs/heads/master'
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v3
  #      - uses: nais/deploy/actions/deploy@v1
  #        env:
  #          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #          CLUSTER: prod-gcp
  #          IMAGE: ${{ needs.bygg-test-push-image.outputs.image }}
  #          RESOURCE: .nais/naiserator-prod.yaml
