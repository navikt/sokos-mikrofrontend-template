name: Bygg og push Docker image

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.github/workflows/snyk.yaml'

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  LATEST_IMAGE: ghcr.io/${{ github.repository }}:latest
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  bygg-og-push-docker-image:
    name: Bygg/test og push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Sjekker ut repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Cache klient node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache server node_modules
        id: cache-server-node-modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('server/package-lock.json') }}

      - name: Installerer dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Installerer dependencies for server
        if: steps.cache-server-node-modules.outputs.cache-hit != 'true'
        run: cd server && npm install

      - name: Bygger applikasjonen
        run: npm run build

      - name: Bygg docker image
        uses: docker/setup-buildx-action@v2

      - name: Logger p√• Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag image latest
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.LATEST_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max